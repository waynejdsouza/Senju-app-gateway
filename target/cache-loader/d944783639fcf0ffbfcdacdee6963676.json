{"remainingRequest":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular-router-loader/src/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/tslint-loader/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts","dependencies":[{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts","mtime":1549704191787},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar ngx_webstorage_1 = require(\"ngx-webstorage\");\nvar app_constants_1 = require(\"app/app.constants\");\nvar AuthInterceptor = /** @class */ (function () {\n    function AuthInterceptor(localStorage, sessionStorage) {\n        this.localStorage = localStorage;\n        this.sessionStorage = sessionStorage;\n    }\n    AuthInterceptor.prototype.intercept = function (request, next) {\n        if (!request || !request.url || (/^http/.test(request.url) && !(app_constants_1.SERVER_API_URL && request.url.startsWith(app_constants_1.SERVER_API_URL)))) {\n            return next.handle(request);\n        }\n        var token = this.localStorage.retrieve('authenticationToken') || this.sessionStorage.retrieve('authenticationToken');\n        if (!!token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: 'Bearer ' + token\n                }\n            });\n        }\n        return next.handle(request);\n    };\n    var _a, _b;\n    AuthInterceptor = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ngx_webstorage_1.LocalStorageService !== \"undefined\" && ngx_webstorage_1.LocalStorageService) === \"function\" ? _a : Object, typeof (_b = typeof ngx_webstorage_1.SessionStorageService !== \"undefined\" && ngx_webstorage_1.SessionStorageService) === \"function\" ? _b : Object])\n    ], AuthInterceptor);\n    return AuthInterceptor;\n}());\nexports.AuthInterceptor = AuthInterceptor;\n",{"version":3,"file":"/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts","sourceRoot":"","sources":["/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular-router-loader/src/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/tslint-loader/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAE3C,iDAA4E;AAG5E,mDAAmD;AAGnD;IACI,yBAAoB,YAAiC,EAAU,cAAqC;QAAhF,iBAAY,GAAZ,YAAY,CAAqB;QAAU,mBAAc,GAAd,cAAc,CAAuB;IAAG,CAAC;IAExG,mCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAClD,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,8BAAc,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,8BAAc,CAAC,CAAC,CAAC,EAAE;YACxH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC/B;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;QACvH,IAAI,CAAC,CAAC,KAAK,EAAE;YACT,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACpB,UAAU,EAAE;oBACR,aAAa,EAAE,SAAS,GAAG,KAAK;iBACnC;aACJ,CAAC,CAAC;SACN;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;;IAjBQ,eAAe;QAD3B,iBAAU,EAAE;qEAEyB,oCAAmB,oBAAnB,oCAAmB,oDAA0B,sCAAqB,oBAArB,sCAAqB;OAD3F,eAAe,CAkB3B;IAAD,sBAAC;CAAA,AAlBD,IAkBC;AAlBY,0CAAe","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\n\nimport { SERVER_API_URL } from 'app/app.constants';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    constructor(private localStorage: LocalStorageService, private sessionStorage: SessionStorageService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (!request || !request.url || (/^http/.test(request.url) && !(SERVER_API_URL && request.url.startsWith(SERVER_API_URL)))) {\n            return next.handle(request);\n        }\n\n        const token = this.localStorage.retrieve('authenticationToken') || this.sessionStorage.retrieve('authenticationToken');\n        if (!!token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: 'Bearer ' + token\n                }\n            });\n        }\n        return next.handle(request);\n    }\n}\n"]}]}