{"remainingRequest":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular-router-loader/src/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/tslint-loader/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/admin/metrics/metrics.component.ts","dependencies":[{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/admin/metrics/metrics.component.ts","mtime":1549704083174},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\nvar metrics_service_1 = require(\"./metrics.service\");\nvar JhiMetricsMonitoringComponent = /** @class */ (function () {\n    function JhiMetricsMonitoringComponent(modalService, metricsService) {\n        this.modalService = modalService;\n        this.metricsService = metricsService;\n        this.metrics = {};\n        this.threadData = {};\n        this.updatingMetrics = true;\n        this.JCACHE_KEY = 'jcache.statistics';\n    }\n    JhiMetricsMonitoringComponent.prototype.ngOnInit = function () {\n        this.refresh();\n    };\n    JhiMetricsMonitoringComponent.prototype.refresh = function () {\n        var _this = this;\n        this.updatingMetrics = true;\n        this.metricsService.getMetrics().subscribe(function (metrics) {\n            _this.metrics = metrics;\n            _this.metricsService.threadDump().subscribe(function (data) {\n                _this.threadData = data.threads;\n                _this.updatingMetrics = false;\n            });\n        });\n    };\n    JhiMetricsMonitoringComponent.prototype.isObjectExisting = function (metrics, key) {\n        return metrics && metrics[key];\n    };\n    JhiMetricsMonitoringComponent.prototype.isObjectExistingAndNotEmpty = function (metrics, key) {\n        return this.isObjectExisting(metrics, key) && JSON.stringify(metrics[key]) !== '{}';\n    };\n    var _a, _b;\n    JhiMetricsMonitoringComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-metrics',\n            templateUrl: './metrics.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" ? _a : Object, typeof (_b = typeof metrics_service_1.JhiMetricsService !== \"undefined\" && metrics_service_1.JhiMetricsService) === \"function\" ? _b : Object])\n    ], JhiMetricsMonitoringComponent);\n    return JhiMetricsMonitoringComponent;\n}());\nexports.JhiMetricsMonitoringComponent = JhiMetricsMonitoringComponent;\n",{"version":3,"file":"/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/admin/metrics/metrics.component.ts","sourceRoot":"","sources":["/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular-router-loader/src/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/tslint-loader/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/admin/metrics/metrics.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,2DAAsD;AAEtD,qDAAsD;AAMtD;IAMI,uCAAoB,YAAsB,EAAU,cAAiC;QAAjE,iBAAY,GAAZ,YAAY,CAAU;QAAU,mBAAc,GAAd,cAAc,CAAmB;QALrF,YAAO,GAAQ,EAAE,CAAC;QAClB,eAAU,GAAQ,EAAE,CAAC;QACrB,oBAAe,GAAG,IAAI,CAAC;QAInB,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;IAC1C,CAAC;IAED,gDAAQ,GAAR;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,+CAAO,GAAP;QAAA,iBASC;QARG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAA,OAAO;YAC9C,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,KAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAA,IAAI;gBAC3C,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC/B,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YACjC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wDAAgB,GAAhB,UAAiB,OAAY,EAAE,GAAW;QACtC,OAAO,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IAED,mEAA2B,GAA3B,UAA4B,OAAY,EAAE,GAAW;QACjD,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;IACxF,CAAC;;IA/BQ,6BAA6B;QAJzC,gBAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,0BAA0B;SAC1C,CAAC;qEAOoC,uBAAQ,oBAAR,uBAAQ,oDAA0B,mCAAiB,oBAAjB,mCAAiB;OAN5E,6BAA6B,CAgCzC;IAAD,oCAAC;CAAA,AAhCD,IAgCC;AAhCY,sEAA6B","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { JhiMetricsService } from './metrics.service';\n\n@Component({\n    selector: 'jhi-metrics',\n    templateUrl: './metrics.component.html'\n})\nexport class JhiMetricsMonitoringComponent implements OnInit {\n    metrics: any = {};\n    threadData: any = {};\n    updatingMetrics = true;\n    JCACHE_KEY: string;\n\n    constructor(private modalService: NgbModal, private metricsService: JhiMetricsService) {\n        this.JCACHE_KEY = 'jcache.statistics';\n    }\n\n    ngOnInit() {\n        this.refresh();\n    }\n\n    refresh() {\n        this.updatingMetrics = true;\n        this.metricsService.getMetrics().subscribe(metrics => {\n            this.metrics = metrics;\n            this.metricsService.threadDump().subscribe(data => {\n                this.threadData = data.threads;\n                this.updatingMetrics = false;\n            });\n        });\n    }\n\n    isObjectExisting(metrics: any, key: string) {\n        return metrics && metrics[key];\n    }\n\n    isObjectExistingAndNotEmpty(metrics: any, key: string) {\n        return this.isObjectExisting(metrics, key) && JSON.stringify(metrics[key]) !== '{}';\n    }\n}\n"]}]}