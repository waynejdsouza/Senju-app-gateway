{"remainingRequest":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/ts-loader/index.js??ref--9-3!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular-router-loader/src/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/tslint-loader/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/shared/auth/has-any-authority.directive.ts","dependencies":[{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/shared/auth/has-any-authority.directive.ts","mtime":1549704083501},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar account_service_1 = require(\"app/core/auth/account.service\");\n/**\n * @whatItDoes Conditionally includes an HTML element if current user has any\n * of the authorities passed as the `expression`.\n *\n * @howToUse\n * ```\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\n *\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\n * ```\n */\nvar HasAnyAuthorityDirective = /** @class */ (function () {\n    function HasAnyAuthorityDirective(accountService, templateRef, viewContainerRef) {\n        this.accountService = accountService;\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n    }\n    Object.defineProperty(HasAnyAuthorityDirective.prototype, \"jhiHasAnyAuthority\", {\n        set: function (value) {\n            var _this = this;\n            this.authorities = typeof value === 'string' ? [value] : value;\n            this.updateView();\n            // Get notified each time authentication state changes.\n            this.accountService.getAuthenticationState().subscribe(function (identity) { return _this.updateView(); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HasAnyAuthorityDirective.prototype.updateView = function () {\n        var hasAnyAuthority = this.accountService.hasAnyAuthority(this.authorities);\n        this.viewContainerRef.clear();\n        if (hasAnyAuthority) {\n            this.viewContainerRef.createEmbeddedView(this.templateRef);\n        }\n    };\n    var _a, _b, _c;\n    tslib_1.__decorate([\n        core_1.Input(),\n        tslib_1.__metadata(\"design:type\", Object),\n        tslib_1.__metadata(\"design:paramtypes\", [Object])\n    ], HasAnyAuthorityDirective.prototype, \"jhiHasAnyAuthority\", null);\n    HasAnyAuthorityDirective = tslib_1.__decorate([\n        core_1.Directive({\n            selector: '[jhiHasAnyAuthority]'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof account_service_1.AccountService !== \"undefined\" && account_service_1.AccountService) === \"function\" ? _a : Object, typeof (_b = typeof core_1.TemplateRef !== \"undefined\" && core_1.TemplateRef) === \"function\" ? _b : Object, typeof (_c = typeof core_1.ViewContainerRef !== \"undefined\" && core_1.ViewContainerRef) === \"function\" ? _c : Object])\n    ], HasAnyAuthorityDirective);\n    return HasAnyAuthorityDirective;\n}());\nexports.HasAnyAuthorityDirective = HasAnyAuthorityDirective;\n",{"version":3,"file":"/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/shared/auth/has-any-authority.directive.ts","sourceRoot":"","sources":["/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/angular-router-loader/src/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/node_modules/tslint-loader/index.js!/Users/waynedsouza/Documents/Senju/app-gateway/src/main/webapp/app/shared/auth/has-any-authority.directive.ts"],"names":[],"mappings":";;;AAAA,sCAAgF;AAChF,iEAA+D;AAE/D;;;;;;;;;;GAUG;AAIH;IAGI,kCACY,cAA8B,EAC9B,WAA6B,EAC7B,gBAAkC;QAFlC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAkB;QAC7B,qBAAgB,GAAhB,gBAAgB,CAAkB;IAC3C,CAAC;IAGJ,sBAAI,wDAAkB;aAAtB,UAAuB,KAAwB;YAD/C,iBAMC;YAJG,IAAI,CAAC,WAAW,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC/D,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,uDAAuD;YACvD,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,UAAU,EAAE,EAAjB,CAAiB,CAAC,CAAC;QAC1F,CAAC;;;OAAA;IAEO,6CAAU,GAAlB;QACI,IAAM,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9E,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,eAAe,EAAE;YACjB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC9D;IACL,CAAC;;IAbD;QADC,YAAK,EAAE;;;sEAMP;IAfQ,wBAAwB;QAHpC,gBAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;SACnC,CAAC;qEAK8B,gCAAc,oBAAd,gCAAc,oDACjB,kBAAW,oBAAX,kBAAW,oDACN,uBAAgB,oBAAhB,uBAAgB;OANrC,wBAAwB,CAwBpC;IAAD,+BAAC;CAAA,AAxBD,IAwBC;AAxBY,4DAAwB","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { AccountService } from 'app/core/auth/account.service';\n\n/**\n * @whatItDoes Conditionally includes an HTML element if current user has any\n * of the authorities passed as the `expression`.\n *\n * @howToUse\n * ```\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\n *\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\n * ```\n */\n@Directive({\n    selector: '[jhiHasAnyAuthority]'\n})\nexport class HasAnyAuthorityDirective {\n    private authorities: string[];\n\n    constructor(\n        private accountService: AccountService,\n        private templateRef: TemplateRef<any>,\n        private viewContainerRef: ViewContainerRef\n    ) {}\n\n    @Input()\n    set jhiHasAnyAuthority(value: string | string[]) {\n        this.authorities = typeof value === 'string' ? [value] : value;\n        this.updateView();\n        // Get notified each time authentication state changes.\n        this.accountService.getAuthenticationState().subscribe(identity => this.updateView());\n    }\n\n    private updateView(): void {\n        const hasAnyAuthority = this.accountService.hasAnyAuthority(this.authorities);\n        this.viewContainerRef.clear();\n        if (hasAnyAuthority) {\n            this.viewContainerRef.createEmbeddedView(this.templateRef);\n        }\n    }\n}\n"]}]}